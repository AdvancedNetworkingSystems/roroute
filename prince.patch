diff --git a/prince/src/parser.c b/prince/src/parser.c
index 0232622..e5e5c77 100644
--- a/prince/src/parser.c
+++ b/prince/src/parser.c
@@ -149,13 +149,12 @@ int add_neigh(struct topology *topo, const char *source, const char *id, const d
 		return 0; // check if source node exists
 	if((t=find_node(topo, id))==0)
 		return 0; //check if target node exists
-	found=find_neigh(s, t);
+		found=find_neigh(s, t);
 	if(found){
-		if(found->validity > validity)
+		if(found->validity < validity)
 			found->weight = weight; //if the link found is older, i update the weight
-		return 1; //The link is already present
 	}
-
+	return 1; //otherwise the found is the newer and i don't update it.
 	temp=s->neighbor_list;
 	s->neighbor_list=(struct neighbor*)malloc(sizeof(struct neighbor));
 	s->neighbor_list->id=t; // add node to source neighbor list
diff --git a/prince/src/prince.c b/prince/src/prince.c
index 240af2e..b685459 100644
--- a/prince/src/prince.c
+++ b/prince/src/prince.c
@@ -39,7 +39,6 @@ int main(int argc, char* argv[])
 	struct graph_parser * gp_p=(struct graph_parser *)ph->gp ;
 	ph->rp = new_plugin_p(ph->host, ph->port, ph->gp, ph->json_type, ph->timer_port);
 	do{
-		sleep(ph->refresh);
 		if(!get_topology_p(ph->rp)){
 			printf("Error getting topology\n");
 			sleep(ph->sleep_onfail);
@@ -64,18 +63,18 @@ int main(int argc, char* argv[])
 		graph_parser_compose_degree_bc_map(ph->gp, ph->bc_degree_map);
 		ph->opt_t.exec_time = (double)(end - start) / CLOCKS_PER_SEC;
 		ph->opt_t.centrality = get_self_bc(ph);
+		if (!compute_timers(ph)){
+			printf("Can't find myself in topology! Help i'm lost\n");
+			sleep(ph->sleep_onfail);
+			continue;
+		}
 		if(log){
 			log = fopen(ph->log_file, "a+");
 			struct timeval tv;
 			gettimeofday(&tv,NULL);
-			fprintf(log, "%i\t%4.4f\t%4.4f\t%4.4f\t%4.4f\n",tv.tv_sec, ph->opt_t.tc_timer, ph->opt_t.h_timer, ph->opt_t.exec_time, ph->opt_t.centrality);
+			fprintf(log, "%i\t%4.9f\t%4.9f\t%4.9f\t%4.9f\n",tv.tv_sec, ph->opt_t.tc_timer, ph->opt_t.h_timer, ph->opt_t.exec_time, ph->opt_t.centrality);
 			fclose(log);
 		}
-		if (!compute_timers(ph)){
-			printf("Can't find myself in topology! Help i'm lost\n");
-			sleep(ph->sleep_onfail);
-			continue;
-		}
 		if (!push_timers_p(ph->rp, ph->opt_t)){
 			sleep(ph->sleep_onfail);
 			continue;
@@ -86,6 +85,7 @@ int main(int argc, char* argv[])
 		free_graph(&(gp_p->g));
 		init_graph(&(gp_p->g));
 		fflush(stdout);
+		sleep(ph->refresh);
 	}while(go);
 	delete_prince_handler(ph);
 	printf("Prince Exited\n");
